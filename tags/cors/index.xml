<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CORS on Kyxfox</title>
    <link>https://kyxfox.com/tags/cors/</link>
    <description>Recent content in CORS on Kyxfox</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://kyxfox.com/tags/cors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction of CORS</title>
      <link>https://kyxfox.com/posts/cybersecurity/introduction-of-cors/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://kyxfox.com/posts/cybersecurity/introduction-of-cors/</guid>
      <description>&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;
&lt;p&gt;Cross-origin resource sharing (CORS) is a browser mechanism which enables controlled access to resources located outside of a given domain. It extends and adds flexibility to the same-origin policy (SOP).&lt;/p&gt;
&lt;h4 id=&#34;access-control-allow-origin&#34;&gt;Access-Control-Allow-Origin&lt;/h4&gt;
&lt;p&gt;#ACAO
&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header is included in the response from one website to a request originating from another website, and identifies the permitted origin of the request.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET /data HTTP/1.1
Host: robust-website.com
Origin : https://normal-website.com
------------------------------------------------------------------
HTTP/1.1 200 OK
...
Access-Control-Allow-Origin: https://normal-website.com
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;access-control-allow-credentials&#34;&gt;Access-Control-Allow-Credentials&lt;/h4&gt;
&lt;p&gt;#ACAC
The default behavior of cross-origin resource requests is for requests to be passed without credentials like cookies and the Authorization header. However, the cross-domain server can permit reading of the response when credentials are passed to it by setting the CORS &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header to true.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
